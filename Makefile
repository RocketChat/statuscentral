git_commit = `git rev-parse HEAD | cut -c -7 || echo ${DRONE_COMMIT_SHA}`
git_tag = `git describe --tags \`git rev-list --tags --max-count=1)\``

server_binary_name=statuscentral
client_binary_name=statusctl
config_file=statuscentral.yaml

# Parameters used when running in an CI environment.
git_commit=`git rev-parse HEAD | cut -c -7 || echo ${DRONE_COMMIT_SHA}`
git_tag=`git describe --tags --abbrev=0 || echo 0.1`
ldflags=-ldflags "-X github.com/RocketChat/statuscentral/buildInfo.Commit=$(git_commit) -X github.com/RocketChat/statuscentral/buildInfo.Version=$(git_tag)"

# Build the statuscentral binary.
build: clean build_server build_statusctl

# Build the statuscentral binary.
build_server:
	@CGO_ENABLED=0 go build ${ldflags} -v -a -o ${server_binary_name} ./cmd/server

# Build fleetctl binary.
build_statusctl:
	@CGO_ENABLED=0 go build ${ldflags} -v -a -o ${client_binary_name} ./cmd/statusctl

# Delete all artifacts generated by the build routines.
clean:
	@docker-compose down
	@rm -f ${server_binary_name} ${client_binary_name}

# Build the statuscentral docker image.
docker:
	docker build -t statuscentral:$(git_commit) .

# Build and execute the statuscentral binary.
run: build
	./${binary_name}

# Deploy all components related to statuscentral and statuscentral locally via docker-compose.
start:
	@docker-compose up -d --build
